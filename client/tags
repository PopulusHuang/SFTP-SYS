!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUF_SIZE	parse.c	7;"	d	file:
CC	Makefile	/^CC=gcc$/;"	m
CDOWN	parse.h	13;"	d
CFLAGS	Makefile	/^CFLAGS= -lssl -lcrypto $/;"	m
CIN	parse.h	8;"	d
CNULL	parse.h	7;"	d
COUT	parse.h	14;"	d
CREG	parse.h	9;"	d
CSCL	parse.h	10;"	d
CSCS	parse.h	11;"	d
CUP	parse.h	12;"	d
FILENAME_SIZE	parse.c	8;"	d	file:
MAXBUF	client.c	14;"	d	file:
Mlogin	menu.c	/^int Mlogin(char *order)$/;"	f
Mmain	menu.c	/^int Mmain(char *order)$/;"	f
Moption	menu.c	/^int Moption(void)$/;"	f
ORDER_NUM	menu.h	5;"	d
ORDER_NUM	parse.h	5;"	d
ORDER_SIZE	client.c	15;"	d	file:
ORDER_SIZE	menu.h	4;"	d
ORDER_SIZE	parse.h	4;"	d
PASSWD_SIZE	parse.c	6;"	d	file:
ShowCerts	client.c	/^void ShowCerts(SSL * ssl)$/;"	f
USER_SIZE	parse.c	5;"	d	file:
_CLIENT_H_	client.h	2;"	d
_MENU_H_	menu.h	2;"	d
_PARSE_H_	parse.h	2;"	d
clnt_entry	parse.c	/^void clnt_entry(SSL *ssl,char *order)$/;"	f
clnt_register	parse.c	/^void clnt_register(SSL *ssl,char *order)$/;"	f
create_emptyfile	parse.c	/^int create_emptyfile(char *filename)$/;"	f
create_recvdir	parse.c	/^void create_recvdir(char *fdir)$/;"	f
download_files	parse.c	/^int download_files(SSL *ssl,char *order)$/;"	f
is_order_exist	parse.c	/^int is_order_exist(char *order)$/;"	f
main	client.c	/^int main(int argc, char **argv)$/;"	f
obj_clnt	Makefile	/^obj_clnt=client.o $/;"	m
obj_menu	Makefile	/^obj_menu=menu.o$/;"	m
obj_sock	Makefile	/^obj_sock=..\/share\/sock_wrap.o$/;"	m
obj_ssl	Makefile	/^obj_ssl=..\/share\/ssl_wrap.o$/;"	m
open_file	client.c	/^int open_file(char *fileName)$/;"	f
order_set	parse.c	/^char order_set[ORDER_NUM][ORDER_SIZE]={"c00a","c01b","","c02c","c03d","c04e","c05f","c06g"};$/;"	v
package_order	parse.c	/^void package_order(char *order,char *data,char *order_pack)$/;"	f
parse_clnt_order	parse.c	/^int parse_clnt_order(SSL *ssl,char *order)$/;"	f
parse_serv_order	parse.c	/^int parse_serv_order(char *order)$/;"	f
print_error	client.c	/^void print_error()$/;"	f
recv_file_data	parse.c	/^int recv_file_data(SSL *ssl,int fd)$/;"	f
recv_file_list	parse.c	/^int recv_file_list(SSL *ssl)$/;"	f
recv_order	parse.c	/^int recv_order(SSL *ssl,char *order)$/;"	f
remove_space	parse.c	/^void remove_space(char *src,char *dest)$/;"	f
scan_local_files	parse.c	/^void scan_local_files(void)$/;"	f
scan_serv_files	parse.c	/^int scan_serv_files(SSL *ssl,char *order)$/;"	f
send_data	client.c	/^void send_data(SSL *ssl,int fd)$/;"	f
send_file	client.c	/^int send_file(SSL *ssl)$/;"	f
send_filename	client.c	/^int send_filename(SSL *ssl,char *fileName)$/;"	f
send_order	parse.c	/^int send_order(SSL *ssl,char *order)$/;"	f
show_Mlogin	client.c	/^int show_Mlogin(SSL *ssl)$/;"	f
sock_init	client.c	/^int sock_init(char **argv)$/;"	f
upload_files	parse.c	/^int upload_files(SSL *ssl,char *order)$/;"	f
